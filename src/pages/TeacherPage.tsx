import React, { useState, useEffect } from 'react';
import { Header } from '../components/Header';
import { useUser } from '../context/UserContext';
import { useNavigate } from 'react-router-dom';
import './TeacherStyle.css';

export const TeacherPage: React.FC = () => {
  const [activeTab, setActiveTab] = useState('attendance');
  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);
  const { user } = useUser();
  const navigate = useNavigate();

  useEffect(() => {
    if (!user || user.userType !== 'teacher') {
      console.log('No teacher data, redirecting to login');
      navigate('/login');
    }
  }, [user, navigate]);

  const renderContent = () => {
    switch (activeTab) {
      case 'attendance':
        return <div>–ñ—É—Ä–Ω–∞–ª –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ (–¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è)</div>;
      case 'grades':
        return <div>–ñ—É—Ä–Ω–∞–ª –æ—Ü–µ–Ω–æ–∫</div>;
      case 'schedule':
        return <div>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π</div>;
      case 'students':
        return <div>–°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤</div>;
      case 'reports':
        return <div>–û—Ç—á–µ—Ç—ã –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞</div>;
      default:
        return <div>–ñ—É—Ä–Ω–∞–ª –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏</div>;
    }
  };

  const getTabIcon = (tabName: string) => {
    // –î–æ–±–∞–≤—å—Ç–µ SVG –∏–∫–æ–Ω–∫–∏ –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
    switch (tabName) {
      case 'attendance': return 'üìä';
      case 'grades': return 'üìà';
      case 'schedule': return 'üìÖ';
      case 'students': return 'üë•';
      case 'reports': return 'üìã';
      default: return '';
    }
  };

  const getTabTitle = (tabName: string) => {
    switch (tabName) {
      case 'attendance': return '–ñ—É—Ä–Ω–∞–ª –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏';
      case 'grades': return '–ñ—É—Ä–Ω–∞–ª –æ—Ü–µ–Ω–æ–∫';
      case 'schedule': return '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ';
      case 'students': return '–°—Ç—É–¥–µ–Ω—Ç—ã';
      case 'reports': return '–û—Ç—á–µ—Ç—ã';
      default: return '–ñ—É—Ä–Ω–∞–ª –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏';
    }
  };

  const handleSidebarToggle = () => {
    setSidebarCollapsed(prev => !prev);
  };

  if (!user) {
    return (
      <div className="teacher-container">
        <div className="teacher-content">
          <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>
        </div>
      </div>
    );
  }

  return (
    <div className="teacher-container">
      <div className="background-animation">
        <div className="shape shape-1"></div>
        <div className="shape shape-2"></div>
        <div className="shape shape-3"></div>
      </div>

      <div className="teacher-content">
        <Header />

        <div className={`teacher-main ${sidebarCollapsed ? 'sidebar-collapsed' : ''}`}>
          <aside className={`sidebar ${sidebarCollapsed ? 'collapsed' : ''}`}>
            <button
              className="sidebar-toggle"
              onClick={handleSidebarToggle}
              aria-label={sidebarCollapsed ? '–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –ø–∞–Ω–µ–ª—å' : '–°–≤–µ—Ä–Ω—É—Ç—å –ø–∞–Ω–µ–ª—å'}
            >
              {sidebarCollapsed ? '‚ñ∂' : '‚óÄ'}
            </button>

            <div className="sidebar-header">
              <div className="user-info">
                <p className="user-name">{user.lastName} {user.name}</p>
                <p className="user-patronymic">{user.surname}</p>
                <p className="user-role">–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å</p>
                <p className="user-department">–ö–∞—Ñ–µ–¥—Ä–∞: -</p>
              </div>
            </div>

            <nav className="sidebar-nav">
              {['attendance', 'grades', 'schedule', 'students', 'reports'].map((tab) => (
                <button
                  key={tab}
                  className={`nav-item ${activeTab === tab ? 'active' : ''}`}
                  onClick={() => setActiveTab(tab)}
                  data-tooltip={sidebarCollapsed ? getTabTitle(tab) : ''}
                >
                  <span className="nav-icon">{getTabIcon(tab)}</span>
                  <span className="nav-text">{getTabTitle(tab)}</span>
                  {activeTab === tab && !sidebarCollapsed && <div className="nav-indicator"></div>}
                </button>
              ))}
            </nav>

            <div className="sidebar-footer">
              <div className="quick-stats">
                <div className="stat-item">
                  <span className="stat-value">5</span>
                  <span className="stat-label">–ì—Ä—É–ø–ø</span>
                </div>
                <div className="stat-item">
                  <span className="stat-value">120</span>
                  <span className="stat-label">–°—Ç—É–¥–µ–Ω—Ç–æ–≤</span>
                </div>
              </div>
            </div>
          </aside>

          <main className="content-area">
            <div className="content-header">
              <h1 className="content-title">
                <span className="title-icon">{getTabIcon(activeTab)}</span>
                {getTabTitle(activeTab)}
              </h1>
            </div>

            <div className="content-card">{renderContent()}</div>
          </main>
        </div>
      </div>
    </div>
  );
};